{"ast":null,"code":"var _jsxFileName = \"/Users/aleksey/Dev/Trash/shopping-cart/components/AddProduct/AddShirt.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useMutation } from '@apollo/client';\nimport { useCallback } from 'react';\nimport { ShirtColor } from 'generated';\nexport const ADD_SHIRT_MUTATION = gql`\n  mutation AddShirt($input: AddShirtInput!) {\n    addShirt(data: $input) {\n      id\n      name\n      type\n      color\n      size\n    }\n  }\n`;\nexport const AddShirt = ({\n  onDone\n}) => {\n  const [addShirt] = useMutation(ADD_SHIRT_MUTATION);\n  const handleSubmit = useCallback(async event => {\n    const formData = new FormData(event.target);\n    const input = {\n      color: formData.get('color').toString(),\n      name: formData.get('name').toString(),\n      size: parseInt(formData.get('size').toString(), 10)\n    };\n    event.preventDefault();\n    await addShirt({\n      variables: input\n    });\n    onDone();\n  }, [onDone]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Name:\", __jsx(\"input\", {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Color:\", __jsx(\"select\", {\n    name: \"color\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, Object.values(ShirtColor).map(color => __jsx(\"option\", {\n    key: color,\n    value: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, color)))), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Size:\", __jsx(\"input\", {\n    name: \"size\",\n    min: \"1\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Add\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: onDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/components/AddProduct/AddShirt.tsx"],"names":["gql","useMutation","useCallback","ShirtColor","ADD_SHIRT_MUTATION","AddShirt","onDone","addShirt","handleSubmit","event","formData","FormData","target","input","color","get","toString","name","size","parseInt","preventDefault","variables","Object","values","map"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAAyCC,UAAzC,QAA0D,WAA1D;AAMA,OAAO,MAAMC,kBAAkB,GAAGJ,GAAI;;;;;;;;;;CAA/B;AAYP,OAAO,MAAMK,QAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC7E,QAAM,CAACC,QAAD,IAAaN,WAAW,CAAmBG,kBAAnB,CAA9B;AACA,QAAMI,YAAY,GAAGN,WAAW,CAC9B,MAAOO,KAAP,IAAkC;AAChC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaF,KAAK,CAACG,MAAnB,CAAjB;AACA,UAAMC,KAAoB,GAAG;AAC3BC,MAAAA,KAAK,EAAGJ,QAAQ,CAACK,GAAT,CAAa,OAAb,EAAsBC,QAAtB,EADmB;AAE3BC,MAAAA,IAAI,EAAEP,QAAQ,CAACK,GAAT,CAAa,MAAb,EAAqBC,QAArB,EAFqB;AAG3BE,MAAAA,IAAI,EAAEC,QAAQ,CAACT,QAAQ,CAACK,GAAT,CAAa,MAAb,EAAqBC,QAArB,EAAD,EAAkC,EAAlC;AAHa,KAA7B;AAKAP,IAAAA,KAAK,CAACW,cAAN;AACA,UAAMb,QAAQ,CAAC;AACbc,MAAAA,SAAS,EAAER;AADE,KAAD,CAAd;AAGAP,IAAAA,MAAM;AACP,GAb6B,EAc9B,CAACA,MAAD,CAd8B,CAAhC;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,MAAM,CAACC,MAAP,CAAcpB,UAAd,EAA0BqB,GAA1B,CAA+BV,KAAD,IAC7B;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAoB,IAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CADD,CADH,CAFF,CALF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAC,GAAvB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,CADF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAER,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CArBF,CADF,CADF;AAgCD,CAlDM","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport { useCallback } from 'react';\nimport {AddShirtInput, AddShirtMutation, ShirtColor} from 'generated';\n\ntype Props = {\n  onDone: () => void;\n};\n\nexport const ADD_SHIRT_MUTATION = gql`\n  mutation AddShirt($input: AddShirtInput!) {\n    addShirt(data: $input) {\n      id\n      name\n      type\n      color\n      size\n    }\n  }\n`;\n\nexport const AddShirt: React.FunctionComponent<Props> = ({ onDone }: Props) => {\n  const [addShirt] = useMutation<AddShirtMutation>(ADD_SHIRT_MUTATION);\n  const handleSubmit = useCallback(\n    async (event: React.FormEvent) => {\n      const formData = new FormData(event.target as HTMLFormElement);\n      const input: AddShirtInput = {\n        color: (formData.get('color').toString() as ShirtColor),\n        name: formData.get('name').toString(),\n        size: parseInt(formData.get('size').toString(), 10),\n      };\n      event.preventDefault();\n      await addShirt({\n        variables: input,\n      });\n      onDone();\n    },\n    [onDone],\n  );\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Name:\n            <input name=\"name\" />\n          </label>\n          <label>\n            Color:\n            <select name=\"color\" required>\n              {Object.values(ShirtColor).map((color) => (\n                <option key={color} value={color}>\n                  {color}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label>\n            Size:\n            <input name=\"size\" min=\"1\" type=\"number\" />\n          </label>\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n          <button type=\"button\" onClick={onDone}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useMutation } from '@apollo/client';\nimport { useCallback, useState } from 'react';\nimport { ShirtColor } from 'generated';\nexport const ADD_SHIRT_MUTATION = gql`\n  mutation AddShirt($input: AddShirtInput!) {\n    addShirt(data: $input) {\n      id\n      name\n      type\n      color\n      size\n    }\n  }\n`;\nexport const AddShirt = ({\n  onDone\n}) => {\n  const [addShirt, {\n    loading\n  }] = useMutation(ADD_SHIRT_MUTATION);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const handleSubmit = useCallback(async event => {\n    const formData = new FormData(event.target);\n    const input = {\n      color: formData.get('color').toString(),\n      name: formData.get('name').toString(),\n      size: parseInt(formData.get('size').toString(), 10)\n    };\n    event.preventDefault();\n\n    try {\n      await addShirt({\n        variables: {\n          input\n        }\n      });\n    } catch (e) {\n      setError('Failed to add shirt');\n      return;\n    }\n\n    onDone();\n  }, [onDone]);\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form__fields\"\n  }, __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"name\"\n  }, \"Name:\"), __jsx(\"input\", {\n    id: \"name\",\n    name: \"name\"\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\"\n  }, \"Color:\"), __jsx(\"select\", {\n    id: \"color\",\n    name: \"color\"\n  }, Object.values(ShirtColor).map(color => __jsx(\"option\", {\n    key: color,\n    value: color\n  }, color))), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"size\"\n  }, \"Size:\"), __jsx(\"input\", {\n    id: \"size\",\n    name: \"size\",\n    min: \"1\",\n    type: \"number\"\n  })), error && __jsx(\"div\", {\n    className: \"form__error\"\n  }, error), __jsx(\"div\", {\n    className: \"form__actions\"\n  }, __jsx(\"button\", {\n    className: \"form__actions__item\",\n    disabled: loading,\n    type: \"submit\"\n  }, \"Add\"), __jsx(\"button\", {\n    className: \"form__actions__item\",\n    disabled: loading,\n    type: \"button\",\n    onClick: onDone\n  }, \"Cancel\"))));\n};","map":null,"metadata":{},"sourceType":"module"}
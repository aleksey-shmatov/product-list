{"ast":null,"code":"var _jsxFileName = \"/Users/aleksey/Dev/Trash/shopping-cart/components/ProductsList/ProductsList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useCallback } from 'react';\nexport const PRODUCTS_QUERY = gql`\n  query products {\n    products {\n      id\n      name\n      type\n      ... on Shirt {\n        shirtColor: color\n        size\n      }\n      ... on Pants {\n        color\n        width\n        length\n      }\n    }\n  }\n`;\nexport const REMOVE_PRODUCT_MUTATION = gql`\n  mutation removeProduct($id: ID!) {\n    removeProduct(id: $id)\n  }\n`;\nexport const ProductsList = () => {\n  const {\n    data\n  } = useQuery(PRODUCTS_QUERY);\n  const [removeProduct] = useMutation(REMOVE_PRODUCT_MUTATION);\n  const handleRemoveProduct = useCallback(id => {\n    removeProduct({\n      variables: {\n        id\n      }\n    });\n  }, []);\n  const products = data.products;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, products.map(product => __jsx(ProductItem, {\n    key: product.id,\n    product: product,\n    onRemove: handleRemoveProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/components/ProductsList/ProductsList.tsx"],"names":["gql","useMutation","useQuery","useCallback","PRODUCTS_QUERY","REMOVE_PRODUCT_MUTATION","ProductsList","data","removeProduct","handleRemoveProduct","id","variables","products","map","product"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,WAAd,EAA2BC,QAA3B,QAA2C,gBAA3C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;;;;;;;;;CAA3B;AAmBP,OAAO,MAAMK,uBAAuB,GAAGL,GAAI;;;;CAApC;AAMP,OAAO,MAAMM,YAAqC,GAAG,MAAM;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAWL,QAAQ,CAACE,cAAD,CAAzB;AACA,QAAM,CAACI,aAAD,IAAkBP,WAAW,CAACI,uBAAD,CAAnC;AACA,QAAMI,mBAAmB,GAAGN,WAAW,CAAEO,EAAD,IAAgB;AACtDF,IAAAA,aAAa,CAAC;AACZG,MAAAA,SAAS,EAAE;AACTD,QAAAA;AADS;AADC,KAAD,CAAb;AAKD,GANsC,EAMpC,EANoC,CAAvC;AAOA,QAAME,QAAQ,GAAGL,IAAI,CAACK,QAAtB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IACZ,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACJ,EAA1B;AAA8B,IAAA,OAAO,EAAEI,OAAvC;AAAgD,IAAA,QAAQ,EAAEL,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AASD,CApBM","sourcesContent":["import { gql, useMutation, useQuery } from '@apollo/client';\nimport { useCallback } from 'react';\n\nexport const PRODUCTS_QUERY = gql`\n  query products {\n    products {\n      id\n      name\n      type\n      ... on Shirt {\n        shirtColor: color\n        size\n      }\n      ... on Pants {\n        color\n        width\n        length\n      }\n    }\n  }\n`;\n\nexport const REMOVE_PRODUCT_MUTATION = gql`\n  mutation removeProduct($id: ID!) {\n    removeProduct(id: $id)\n  }\n`;\n\nexport const ProductsList: React.FunctionComponent = () => {\n  const { data } = useQuery(PRODUCTS_QUERY);\n  const [removeProduct] = useMutation(REMOVE_PRODUCT_MUTATION);\n  const handleRemoveProduct = useCallback((id: number) => {\n    removeProduct({\n      variables: {\n        id,\n      },\n    });\n  }, []);\n  const products = data.products;\n  return (\n    <div>\n      <ul>\n        {products.map((product) => (\n          <ProductItem key={product.id} product={product} onRemove={handleRemoveProduct}></ProductItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
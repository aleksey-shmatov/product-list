{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/aleksey/Dev/Trash/shopping-cart/components/AddProduct/AddPants.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation AddPants($input: AddPantsInput!) {\\n    addPants(data: $input) {\\n      id\\n      name\\n      type\\n      color\\n      width\\n      length\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useMutation } from '@apollo/client';\nimport { useCallback } from 'react';\nexport var ADD_PANTS_MUTATION = gql(_templateObject());\nexport var AddPants = function AddPants(_ref) {\n  var onDone = _ref.onDone;\n\n  var _useMutation = useMutation(ADD_PANTS_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addPants = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = useCallback(function _callee(event) {\n    var formData, input;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData(event.target);\n            input = {\n              color: formData.get('color').toString(),\n              name: formData.get('name').toString(),\n              width: parseInt(formData.get('width').toString(), 10),\n              length: parseInt(formData.get('length').toString(), 10)\n            };\n            event.preventDefault();\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(addPants({\n              variables: {\n                input: input\n              }\n            }));\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](3);\n            setError('Failed to add shirt');\n            return _context.abrupt(\"return\");\n\n          case 12:\n            onDone();\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 8]], Promise);\n  }, [onDone]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form__fields\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Name:\"), __jsx(\"input\", {\n    name: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Color:\"), __jsx(\"input\", {\n    name: \"color\",\n    minLength: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Width:\"), __jsx(\"input\", {\n    name: \"width\",\n    min: 1,\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Length:\"), __jsx(\"input\", {\n    name: \"length\",\n    min: 1,\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), error && __jsx(\"div\", {\n    className: \"form__error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, error), __jsx(\"div\", {\n    className: \"form__actions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"form__actions__item\",\n    disabled: loading,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Add\"), __jsx(\"button\", {\n    className: \"form__actions__item\",\n    disabled: loading,\n    type: \"button\",\n    onClick: onDone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/components/AddProduct/AddPants.tsx"],"names":["gql","useMutation","useCallback","ADD_PANTS_MUTATION","AddPants","onDone","addPants","loading","useState","error","setError","handleSubmit","event","formData","FormData","target","input","color","get","toString","name","width","parseInt","length","preventDefault","variables"],"mappings":"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","sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport { AddPantsInput, AddPantsMutation } from 'generated';\nimport { useCallback } from 'react';\n\ntype Props = {\n  onDone: () => void;\n};\n\nexport const ADD_PANTS_MUTATION = gql`\n  mutation AddPants($input: AddPantsInput!) {\n    addPants(data: $input) {\n      id\n      name\n      type\n      color\n      width\n      length\n    }\n  }\n`;\n\nexport const AddPants: React.FunctionComponent<Props> = ({ onDone }: Props) => {\n  const [addPants, { loading }] = useMutation<AddPantsMutation>(ADD_PANTS_MUTATION);\n  const [error, setError] = useState('');\n  const handleSubmit = useCallback(\n    async (event: React.FormEvent) => {\n      const formData = new FormData(event.target as HTMLFormElement);\n      const input: AddPantsInput = {\n        color: formData.get('color').toString(),\n        name: formData.get('name').toString(),\n        width: parseInt(formData.get('width').toString(), 10),\n        length: parseInt(formData.get('length').toString(), 10),\n      };\n      event.preventDefault();\n      try {\n        await addPants({\n          variables: {\n            input,\n          },\n        });\n      } catch (e) {\n        setError('Failed to add shirt');\n        return;\n      }\n      onDone();\n    },\n    [onDone],\n  );\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__fields\">\n          <label className=\"form__fields__label\" htmlFor=\"name\">\n            Name:\n          </label>\n          <input name=\"name\" />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Color:\n          </label>\n          <input name=\"color\" minLength={1} />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Width:\n          </label>\n          <input name=\"width\" min={1} type=\"number\" />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Length:\n          </label>\n          <input name=\"length\" min={1} type=\"number\" />\n        </div>\n        {error && <div className=\"form__error\">{error}</div>}\n        <div className=\"form__actions\">\n          <button className=\"form__actions__item\" disabled={loading} type=\"submit\">\n            Add\n          </button>\n          <button className=\"form__actions__item\" disabled={loading} type=\"button\" onClick={onDone}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
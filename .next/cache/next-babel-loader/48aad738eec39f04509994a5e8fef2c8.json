{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation AddPants($input: AddPantsInput!) {\\n    addPants(data: $input) {\\n      id\\n      name\\n      type\\n      color\\n      width\\n      length\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useMutation } from '@apollo/client';\nimport { useCallback, useState } from 'react';\nexport var ADD_PANTS_MUTATION = gql(_templateObject());\nexport var AddPants = function AddPants(_ref) {\n  var onDone = _ref.onDone;\n\n  var _useMutation = useMutation(ADD_PANTS_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addPants = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var _useState = useState(''),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var handleSubmit = useCallback(function _callee(event) {\n    var formData, input;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData(event.target);\n            input = {\n              color: formData.get('color').toString(),\n              name: formData.get('name').toString(),\n              width: parseInt(formData.get('width').toString(), 10),\n              length: parseInt(formData.get('length').toString(), 10)\n            };\n            event.preventDefault();\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(addPants({\n              variables: {\n                input: input\n              }\n            }));\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](3);\n            setError('Failed to add shirt');\n            return _context.abrupt(\"return\");\n\n          case 12:\n            onDone();\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 8]], Promise);\n  }, [onDone]);\n  return __jsx(\"div\", null, __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form__fields\"\n  }, __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"name\"\n  }, \"Name:\"), __jsx(\"input\", {\n    name: \"name\"\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\"\n  }, \"Color:\"), __jsx(\"input\", {\n    name: \"color\",\n    minLength: 1\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\"\n  }, \"Width:\"), __jsx(\"input\", {\n    name: \"width\",\n    min: 1,\n    type: \"number\"\n  }), __jsx(\"label\", {\n    className: \"form__fields__label\",\n    htmlFor: \"color\"\n  }, \"Length:\"), __jsx(\"input\", {\n    name: \"length\",\n    min: 1,\n    type: \"number\"\n  })), error && __jsx(\"div\", {\n    className: \"form__error\"\n  }, error), __jsx(\"div\", {\n    className: \"form__actions\"\n  }, __jsx(\"button\", {\n    className: \"form__actions__item\",\n    disabled: loading,\n    type: \"submit\"\n  }, \"Add\"), __jsx(\"button\", {\n    className: \"form__actions__item\",\n    disabled: loading,\n    type: \"button\",\n    onClick: onDone\n  }, \"Cancel\"))));\n};","map":null,"metadata":{},"sourceType":"module"}
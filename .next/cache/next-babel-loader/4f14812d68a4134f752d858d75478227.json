{"ast":null,"code":"var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _class4, _class5, _descriptor4, _descriptor5, _descriptor6, _temp2, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _class7, _class8;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { Min, MinLength } from 'class-validator';\nimport { ProductEntity } from 'db/entity/ProductEntity';\nimport { ProductType } from 'db/entity/ProductType';\nimport { Arg, Field, ID, InputType, Int, Mutation, Query, Resolver } from 'type-graphql';\nimport { getConnection, getCustomRepository } from 'typeorm';\nimport { ShirtColor, ShirtEntity } from '../db/entity/ShirtEntity';\nimport { Pants } from './Pants';\nimport { Product } from './Product';\nimport { Shirt } from './Shirt';\nlet AddShirtInput = (_dec = InputType(), _dec2 = Field(), _dec3 = Reflect.metadata(\"design:type\", String), _dec4 = Field(() => ShirtColor), _dec5 = Reflect.metadata(\"design:type\", typeof ShirtColor === \"undefined\" ? Object : ShirtColor), _dec6 = Field(() => Int), _dec7 = Min(1), _dec8 = Reflect.metadata(\"design:type\", Number), _dec(_class = (_class2 = (_temp = class AddShirtInput {\n  constructor() {\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"color\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"size\", _descriptor3, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"name\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"color\", [_dec4, _dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"size\", [_dec6, _dec7, _dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nlet AddPantsInput = (_dec9 = InputType(), _dec10 = Field(), _dec11 = MinLength(1), _dec12 = Reflect.metadata(\"design:type\", String), _dec13 = Field(() => Int), _dec14 = Min(1), _dec15 = Reflect.metadata(\"design:type\", Number), _dec16 = Field(() => Int), _dec17 = Min(1), _dec18 = Reflect.metadata(\"design:type\", Number), _dec9(_class4 = (_class5 = (_temp2 = class AddPantsInput {\n  constructor() {\n    _initializerDefineProperty(this, \"color\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"width\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"length\", _descriptor6, this);\n  }\n\n}, _temp2), (_descriptor4 = _applyDecoratedDescriptor(_class5.prototype, \"color\", [_dec10, _dec11, _dec12], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class5.prototype, \"width\", [_dec13, _dec14, _dec15], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class5.prototype, \"length\", [_dec16, _dec17, _dec18], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class5)) || _class4);\nexport let ProductResolver = (_dec19 = Resolver(() => Product), _dec20 = Query(() => [Product]), _dec21 = Reflect.metadata(\"design:type\", Function), _dec22 = Reflect.metadata(\"design:paramtypes\", []), _dec23 = Mutation(() => ID), _dec24 = function (target, key) {\n  return Arg('id', () => Int)(target, key, 0);\n}, _dec25 = Reflect.metadata(\"design:type\", Function), _dec26 = Reflect.metadata(\"design:paramtypes\", [Number]), _dec27 = Mutation(() => Shirt), _dec28 = function (target, key) {\n  return Arg('data')(target, key, 0);\n}, _dec29 = Reflect.metadata(\"design:type\", Function), _dec30 = Reflect.metadata(\"design:paramtypes\", [typeof AddShirtInput === \"undefined\" ? Object : AddShirtInput]), _dec31 = Mutation(() => Pants), _dec32 = function (target, key) {\n  return Arg('data')(target, key, 0);\n}, _dec33 = Reflect.metadata(\"design:type\", Function), _dec34 = Reflect.metadata(\"design:paramtypes\", [typeof AddPantsInput === \"undefined\" ? Object : AddPantsInput]), _dec19(_class7 = (_class8 = class ProductResolver {\n  async products() {\n    return await [];\n  }\n\n  async removeProduct(id) {\n    console.log('Removing');\n    console.log(id);\n    return id;\n  }\n\n  async addShirt(shirtInput) {\n    const repository = getCustomRepository(ProductEntity);\n    console.log(repository);\n    return await getConnection().transaction(async transactionalEntityManager => {\n      const product = new ProductEntity();\n      product.name = shirtInput.name;\n      product.type = ProductType.shirt;\n      const newProduct = await transactionalEntityManager.save(product);\n      console.log(product);\n      console.log(newProduct);\n      const shirt = new ShirtEntity();\n      shirt.id = product.id;\n      shirt.color = shirtInput.color;\n      shirt.size = shirtInput.size;\n      await transactionalEntityManager.save(shirt);\n      return {\n        id: product.id,\n        name: product.name,\n        type: ProductType.shirt,\n        color: shirt.color,\n        size: shirt.size\n      };\n    });\n  }\n\n  async addPants(newPants) {\n    console.log(newPants);\n    return null;\n  }\n\n}, (_applyDecoratedDescriptor(_class8.prototype, \"products\", [_dec20, _dec21, _dec22], Object.getOwnPropertyDescriptor(_class8.prototype, \"products\"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, \"removeProduct\", [_dec23, _dec24, _dec25, _dec26], Object.getOwnPropertyDescriptor(_class8.prototype, \"removeProduct\"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, \"addShirt\", [_dec27, _dec28, _dec29, _dec30], Object.getOwnPropertyDescriptor(_class8.prototype, \"addShirt\"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, \"addPants\", [_dec31, _dec32, _dec33, _dec34], Object.getOwnPropertyDescriptor(_class8.prototype, \"addPants\"), _class8.prototype)), _class8)) || _class7);","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/graphql/ProductResolver.ts"],"names":["Min","MinLength","ProductEntity","ProductType","Arg","Field","ID","InputType","Int","Mutation","Query","Resolver","getConnection","getCustomRepository","ShirtColor","ShirtEntity","Pants","Product","Shirt","AddShirtInput","AddPantsInput","ProductResolver","products","removeProduct","id","console","log","addShirt","shirtInput","repository","transaction","transactionalEntityManager","product","name","type","shirt","newProduct","save","color","size","addPants","newPants"],"mappings":"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","sourcesContent":["import { Min, MinLength } from 'class-validator';\nimport { ProductEntity } from 'db/entity/ProductEntity';\nimport { ProductType, productTypes } from 'db/entity/ProductType';\nimport { Arg, Field, ID, InputType, Int, Mutation, Query, Resolver } from 'type-graphql';\nimport { getConnection, getCustomRepository } from 'typeorm';\nimport { ShirtColor, ShirtEntity } from '../db/entity/ShirtEntity';\nimport { Pants } from './Pants';\nimport { Product } from './Product';\nimport { Shirt } from './Shirt';\n\n@InputType()\nclass AddShirtInput implements Partial<Shirt> {\n  @Field()\n  name: string;\n\n  @Field(() => ShirtColor)\n  color: ShirtColor;\n\n  @Field(() => Int)\n  @Min(1)\n  size: number;\n}\n\n@InputType()\nclass AddPantsInput implements Partial<Pants> {\n  @Field()\n  @MinLength(1)\n  color: string;\n\n  @Field(() => Int)\n  @Min(1)\n  width: number;\n\n  @Field(() => Int)\n  @Min(1)\n  length: number;\n}\n\n@Resolver(() => Product)\nexport class ProductResolver {\n  @Query(() => [Product])\n  async products(): Promise<Product[]> {\n    return await [];\n  }\n\n  @Mutation(() => ID)\n  async removeProduct(@Arg('id', () => Int) id: number): Promise<number> {\n    console.log('Removing');\n    console.log(id);\n    return id;\n  }\n\n  @Mutation(() => Shirt)\n  async addShirt(@Arg('data') shirtInput: AddShirtInput): Promise<Shirt> {\n    const repository = getCustomRepository(ProductEntity);\n    console.log(repository);\n    return await getConnection().transaction(async (transactionalEntityManager) => {\n      const product = new ProductEntity();\n      product.name = shirtInput.name;\n      product.type = ProductType.shirt;\n      const newProduct = await transactionalEntityManager.save(product);\n\n      console.log(product);\n      console.log(newProduct);\n\n      const shirt = new ShirtEntity();\n      shirt.id = product.id;\n      shirt.color = shirtInput.color;\n      shirt.size = shirtInput.size;\n\n      await transactionalEntityManager.save(shirt);\n\n      return {\n        id: product.id,\n        name: product.name,\n        type: ProductType.shirt,\n        color: shirt.color,\n        size: shirt.size,\n      };\n    });\n  }\n\n  @Mutation(() => Pants)\n  async addPants(@Arg('data') newPants: AddPantsInput): Promise<Pants> {\n    console.log(newPants);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
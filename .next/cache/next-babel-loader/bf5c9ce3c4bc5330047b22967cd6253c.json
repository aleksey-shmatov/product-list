{"ast":null,"code":"import 'reflect-metadata';\nimport { ApolloServer, gql } from 'apollo-server-micro';\nconst typeDefs = gql`\n  type Query {\n    products: [Product!]!\n  }\n  type Product {\n    id: Int!\n    name: String\n  }\n`;\nconst resolvers = {\n  Query: {\n    products(parent, args, context) {\n      return [{\n        id: 0,\n        name: 'Nextjs'\n      }];\n    }\n\n  }\n};\nconst apolloServer = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default apolloServer.createHandler({\n  path: '/api/graphql'\n});","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/pages/api/graphql.ts"],"names":["ApolloServer","gql","typeDefs","resolvers","Query","products","parent","args","context","id","name","apolloServer","config","api","bodyParser","createHandler","path"],"mappings":"AAAA,OAAO,kBAAP;AACA,SAASA,YAAT,EAAuBC,GAAvB,QAAkC,qBAAlC;AAEA,MAAMC,QAAQ,GAAGD,GAAI;;;;;;;;CAArB;AAUA,MAAME,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,CAACC,MAAD,EAASC,IAAT,EAAeC,OAAf,EAAwB;AAC9B,aAAO,CAAC;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE;AAAf,OAAD,CAAP;AACD;;AAHI;AADS,CAAlB;AAQA,MAAMC,YAAY,GAAG,IAAIX,YAAJ,CAAiB;AAAEE,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAjB,CAArB;AAEA,OAAO,MAAMS,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AADe,CAAf;AAMP,eAAeH,YAAY,CAACI,aAAb,CAA2B;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA3B,CAAf","sourcesContent":["import 'reflect-metadata';\nimport { ApolloServer, gql } from 'apollo-server-micro';\n\nconst typeDefs = gql`\n  type Query {\n    products: [Product!]!\n  }\n  type Product {\n    id: Int!\n    name: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    products(parent, args, context) {\n      return [{ id: 0, name: 'Nextjs' }];\n    },\n  },\n};\n\nconst apolloServer = new ApolloServer({ typeDefs, resolvers });\n\nexport const config = {\n  api: {\n    bodyParser: false,\n  },\n};\n\nexport default apolloServer.createHandler({ path: '/api/graphql' });\n"]},"metadata":{},"sourceType":"module"}
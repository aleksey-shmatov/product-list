{"ast":null,"code":"var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _class4, _class5, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _temp2, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _class7, _class8;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { Min, MinLength } from 'class-validator';\nimport { PantsEntity } from 'db/entity/PantsEntity';\nimport { ProductEntity } from 'db/entity/ProductEntity';\nimport { ProductType } from 'db/entity/ProductType';\nimport { Arg, Field, ID, InputType, Int, Mutation, Query, Resolver } from 'type-graphql';\nimport { getConnection, getRepository } from 'typeorm';\nimport { ShirtColor, ShirtEntity } from '../db/entity/ShirtEntity';\nimport { Pants } from './Pants';\nimport { Product } from './Product';\nimport { Shirt } from './Shirt';\nlet AddShirtInput = (_dec = InputType(), _dec2 = Field(), _dec3 = Reflect.metadata(\"design:type\", String), _dec4 = Field(() => ShirtColor), _dec5 = Reflect.metadata(\"design:type\", typeof ShirtColor === \"undefined\" ? Object : ShirtColor), _dec6 = Field(() => Int), _dec7 = Min(1), _dec8 = Reflect.metadata(\"design:type\", Number), _dec(_class = (_class2 = (_temp = class AddShirtInput {\n  constructor() {\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"color\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"size\", _descriptor3, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"name\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"color\", [_dec4, _dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"size\", [_dec6, _dec7, _dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nlet AddPantsInput = (_dec9 = InputType(), _dec10 = Field(), _dec11 = Reflect.metadata(\"design:type\", String), _dec12 = Field(), _dec13 = MinLength(1), _dec14 = Reflect.metadata(\"design:type\", String), _dec15 = Field(() => Int), _dec16 = Min(1), _dec17 = Reflect.metadata(\"design:type\", Number), _dec18 = Field(() => Int), _dec19 = Min(1), _dec20 = Reflect.metadata(\"design:type\", Number), _dec9(_class4 = (_class5 = (_temp2 = class AddPantsInput {\n  constructor() {\n    _initializerDefineProperty(this, \"name\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"color\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"width\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"length\", _descriptor7, this);\n  }\n\n}, _temp2), (_descriptor4 = _applyDecoratedDescriptor(_class5.prototype, \"name\", [_dec10, _dec11], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class5.prototype, \"color\", [_dec12, _dec13, _dec14], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class5.prototype, \"width\", [_dec15, _dec16, _dec17], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class5.prototype, \"length\", [_dec18, _dec19, _dec20], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class5)) || _class4);\nexport let ProductResolver = (_dec21 = Resolver(() => Product), _dec22 = Query(() => [Product]), _dec23 = Reflect.metadata(\"design:type\", Function), _dec24 = Reflect.metadata(\"design:paramtypes\", []), _dec25 = Mutation(() => ID), _dec26 = function (target, key) {\n  return Arg('id', () => ID)(target, key, 0);\n}, _dec27 = Reflect.metadata(\"design:type\", Function), _dec28 = Reflect.metadata(\"design:paramtypes\", [Number]), _dec29 = Mutation(() => Shirt), _dec30 = function (target, key) {\n  return Arg('data')(target, key, 0);\n}, _dec31 = Reflect.metadata(\"design:type\", Function), _dec32 = Reflect.metadata(\"design:paramtypes\", [typeof AddShirtInput === \"undefined\" ? Object : AddShirtInput]), _dec33 = Mutation(() => Pants), _dec34 = function (target, key) {\n  return Arg('data')(target, key, 0);\n}, _dec35 = Reflect.metadata(\"design:type\", Function), _dec36 = Reflect.metadata(\"design:paramtypes\", [typeof AddPantsInput === \"undefined\" ? Object : AddPantsInput]), _dec21(_class7 = (_class8 = class ProductResolver {\n  async products() {\n    const products = await getRepository(ProductEntity).find({\n      relations: ['pants', 'shirt']\n    });\n    const results = products.map(product => {\n      if (product.type === 'shirt') {\n        return {\n          id: product.id,\n          name: product.name,\n          type: product.type,\n          color: product.shirt.color,\n          size: product.shirt.size\n        };\n      } else if (product.type === 'pants') {\n        return {\n          id: product.id,\n          name: product.name,\n          type: product.type,\n          color: product.pants.color,\n          width: product.pants.width,\n          length: product.pants.length\n        };\n      } else {\n        throw new Error('Unknown product type');\n      }\n    });\n    return results;\n  }\n\n  async removeProduct(id) {\n    await getRepository(ProductEntity).delete(id);\n    return id;\n  }\n\n  async addShirt(shirtInput) {\n    return await getConnection().transaction(async transactionalEntityManager => {\n      const product = new ProductEntity();\n      product.name = shirtInput.name;\n      product.type = ProductType.shirt;\n      await transactionalEntityManager.save(product);\n      const shirt = new ShirtEntity();\n      shirt.id = product.id;\n      shirt.color = shirtInput.color;\n      shirt.size = shirtInput.size;\n      await transactionalEntityManager.save(shirt);\n      return {\n        id: product.id,\n        name: product.name,\n        type: ProductType.shirt,\n        color: shirt.color,\n        size: shirt.size\n      };\n    });\n  }\n\n  async addPants(pantsInput) {\n    return await getConnection().transaction(async transactionalEntityManager => {\n      const product = new ProductEntity();\n      product.name = pantsInput.name;\n      product.type = ProductType.pants;\n      await transactionalEntityManager.save(product);\n      const pants = new PantsEntity();\n      pants.id = product.id;\n      pants.color = pantsInput.color;\n      pants.width = pantsInput.width;\n      pants.length = pantsInput.length;\n      await transactionalEntityManager.save(pants);\n      return {\n        id: product.id,\n        name: product.name,\n        type: ProductType.pants,\n        color: pants.color,\n        width: pants.width,\n        length: pants.length\n      };\n    });\n  }\n\n}, (_applyDecoratedDescriptor(_class8.prototype, \"products\", [_dec22, _dec23, _dec24], Object.getOwnPropertyDescriptor(_class8.prototype, \"products\"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, \"removeProduct\", [_dec25, _dec26, _dec27, _dec28], Object.getOwnPropertyDescriptor(_class8.prototype, \"removeProduct\"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, \"addShirt\", [_dec29, _dec30, _dec31, _dec32], Object.getOwnPropertyDescriptor(_class8.prototype, \"addShirt\"), _class8.prototype), _applyDecoratedDescriptor(_class8.prototype, \"addPants\", [_dec33, _dec34, _dec35, _dec36], Object.getOwnPropertyDescriptor(_class8.prototype, \"addPants\"), _class8.prototype)), _class8)) || _class7);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/aleksey/Dev/Trash/shopping-cart/pages/_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloProvider } from '@apollo/client';\nimport { useApollo } from '../lib/apolloClient';\nexport default function App({\n  Component,\n  pageProps\n}) {\n  console.log(pageProps.initialApolloState);\n  const apolloClient = useApollo(pageProps.initialApolloState);\n  return __jsx(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/pages/_app.tsx"],"names":["ApolloProvider","useApollo","App","Component","pageProps","console","log","initialApolloState","apolloClient"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,gBAA/B;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAQA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAA8D;AAC3EC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,kBAAtB;AACA,QAAMC,YAAY,GAAGP,SAAS,CAACG,SAAS,CAACG,kBAAX,CAA9B;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeJ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD","sourcesContent":["import { ApolloProvider } from '@apollo/client';\nimport { AppPropsType } from 'next/dist/next-server/lib/utils';\nimport { useApollo } from '../lib/apolloClient';\n\ntype AppProps = AppPropsType & {\n  pageProps: {\n    initialApolloState: unknown;\n  };\n};\n\nexport default function App({ Component, pageProps }: AppProps): JSX.Element {\n  console.log(pageProps.initialApolloState);\n  const apolloClient = useApollo(pageProps.initialApolloState);\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <Component {...pageProps} />\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
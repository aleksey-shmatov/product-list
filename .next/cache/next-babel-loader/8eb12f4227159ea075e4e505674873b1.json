{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/aleksey/Dev/Trash/shopping-cart/components/ProductsList/ProductsList.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation removeProduct($id: ID!) {\\n    removeProduct(id: $id)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query products {\\n    products {\\n      id\\n      name\\n      type\\n      ... on Shirt {\\n        shirtColor: color\\n        size\\n      }\\n      ... on Pants {\\n        color\\n        width\\n        length\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useCallback } from 'react';\nexport var PRODUCTS_QUERY = gql(_templateObject());\nexport var REMOVE_PRODUCT_MUTATION = gql(_templateObject2());\nexport var ProductsList = function ProductsList() {\n  var _useQuery = useQuery(PRODUCTS_QUERY),\n      data = _useQuery.data;\n\n  var _useMutation = useMutation(REMOVE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      removeProduct = _useMutation2[0];\n\n  var handleRemoveProduct = useCallback(function (id) {\n    removeProduct({\n      variables: {\n        id: id\n      }\n    });\n  }, []);\n  var products = data.products;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, products.map(function (product) {\n    return __jsx(ProductItem, {\n      key: product.id,\n      product: product,\n      onRemove: handleRemoveProduct,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/components/ProductsList/ProductsList.tsx"],"names":["gql","useMutation","useQuery","useCallback","PRODUCTS_QUERY","REMOVE_PRODUCT_MUTATION","ProductsList","data","removeProduct","handleRemoveProduct","id","variables","products","map","product"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,WAAd,EAA2BC,QAA3B,QAA2C,gBAA3C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAO,IAAMC,cAAc,GAAGJ,GAAH,mBAApB;AAmBP,OAAO,IAAMK,uBAAuB,GAAGL,GAAH,oBAA7B;AAMP,OAAO,IAAMM,YAAqC,GAAG,SAAxCA,YAAwC,GAAM;AAAA,kBACxCJ,QAAQ,CAACE,cAAD,CADgC;AAAA,MACjDG,IADiD,aACjDA,IADiD;;AAAA,qBAEjCN,WAAW,CAACI,uBAAD,CAFsB;AAAA;AAAA,MAElDG,aAFkD;;AAGzD,MAAMC,mBAAmB,GAAGN,WAAW,CAAC,UAACO,EAAD,EAAgB;AACtDF,IAAAA,aAAa,CAAC;AACZG,MAAAA,SAAS,EAAE;AACTD,QAAAA,EAAE,EAAFA;AADS;AADC,KAAD,CAAb;AAKD,GANsC,EAMpC,EANoC,CAAvC;AAOA,MAAME,QAAQ,GAAGL,IAAI,CAACK,QAAtB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD;AAAA,WACZ,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,OAAO,CAACJ,EAA1B;AAA8B,MAAA,OAAO,EAAEI,OAAvC;AAAgD,MAAA,QAAQ,EAAEL,mBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAb,CADH,CADF,CADF;AASD,CApBM","sourcesContent":["import { gql, useMutation, useQuery } from '@apollo/client';\nimport { useCallback } from 'react';\n\nexport const PRODUCTS_QUERY = gql`\n  query products {\n    products {\n      id\n      name\n      type\n      ... on Shirt {\n        shirtColor: color\n        size\n      }\n      ... on Pants {\n        color\n        width\n        length\n      }\n    }\n  }\n`;\n\nexport const REMOVE_PRODUCT_MUTATION = gql`\n  mutation removeProduct($id: ID!) {\n    removeProduct(id: $id)\n  }\n`;\n\nexport const ProductsList: React.FunctionComponent = () => {\n  const { data } = useQuery(PRODUCTS_QUERY);\n  const [removeProduct] = useMutation(REMOVE_PRODUCT_MUTATION);\n  const handleRemoveProduct = useCallback((id: number) => {\n    removeProduct({\n      variables: {\n        id,\n      },\n    });\n  }, []);\n  const products = data.products;\n  return (\n    <div>\n      <ul>\n        {products.map((product) => (\n          <ProductItem key={product.id} product={product} onRemove={handleRemoveProduct}></ProductItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
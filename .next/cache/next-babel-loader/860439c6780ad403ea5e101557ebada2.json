{"ast":null,"code":"var _jsxFileName = \"/Users/aleksey/Dev/Trash/shopping-cart/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from '@apollo/client';\nimport Products from 'components/Products';\nimport { initializeApollo } from 'lib/apolloClient';\nimport Head from 'next/head';\nexport default function Cart() {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Products\")), \"List of products\", __jsx(Products, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}\nconst PRODUCTS_QUERY = gql`\n  query products {\n    products {\n      id\n      name\n      ... on Shirt {\n        shirtColor: color\n        size\n      }\n      ... on Pants {\n        color\n        width\n        length\n      }\n    }\n  }\n`;\nexport const getServerSideProps = async () => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: PRODUCTS_QUERY\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    }\n  };\n};","map":{"version":3,"sources":["/Users/aleksey/Dev/Trash/shopping-cart/pages/index.tsx"],"names":["gql","Products","initializeApollo","Head","Cart","PRODUCTS_QUERY","getServerSideProps","apolloClient","query","props","initialApolloState","cache","extract"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,IAAT,GAA6B;AAC1C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,sBAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;AAED,MAAMC,cAAc,GAAGL,GAAI;;;;;;;;;;;;;;;;CAA3B;AAkBA,OAAO,MAAMM,kBAAsC,GAAG,YAAY;AAChE,QAAMC,YAAY,GAAGL,gBAAgB,EAArC;AAEA,QAAMK,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEH;AADgB,GAAnB,CAAN;AAIA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEH,YAAY,CAACI,KAAb,CAAmBC,OAAnB;AADf;AADF,GAAP;AAKD,CAZM","sourcesContent":["import { gql } from '@apollo/client';\nimport Products from 'components/Products';\nimport { initializeApollo } from 'lib/apolloClient';\nimport { GetServerSideProps } from 'next';\nimport Head from 'next/head';\n\nexport default function Cart(): JSX.Element {\n  return (\n    <div>\n      <Head>\n        <title>Products</title>\n      </Head>\n      List of products\n      <Products />\n    </div>\n  );\n}\n\nconst PRODUCTS_QUERY = gql`\n  query products {\n    products {\n      id\n      name\n      ... on Shirt {\n        shirtColor: color\n        size\n      }\n      ... on Pants {\n        color\n        width\n        length\n      }\n    }\n  }\n`;\n\nexport const getServerSideProps: GetServerSideProps = async () => {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: PRODUCTS_QUERY,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
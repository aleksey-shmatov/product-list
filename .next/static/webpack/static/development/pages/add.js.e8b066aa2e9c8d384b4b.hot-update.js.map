{"version":3,"file":"static/webpack/static/development/pages/add.js.e8b066aa2e9c8d384b4b.hot-update.js","sources":["webpack:///./components/AddProduct/AddPants.tsx","webpack:///./components/AddProduct/AddProduct.tsx","webpack:///./components/AddProduct/AddShirt.tsx"],"sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport { AddPantsInput, AddPantsMutation } from 'generated';\nimport { useCallback } from 'react';\n\ntype Props = {\n  onDone: () => void;\n};\n\nexport const ADD_PANTS_MUTATION = gql`\n  mutation AddPants($input: AddPantsInput!) {\n    addPants(data: $input) {\n      id\n      name\n      type\n      color\n      width\n      length\n    }\n  }\n`;\n\nexport const AddPants: React.FunctionComponent<Props> = ({ onDone }: Props) => {\n  const [addShirt, { loading }] = useMutation<AddPantsMutation>(ADD_PANTS_MUTATION);\n  const handleSubmit = useCallback(\n    async (event: React.FormEvent) => {\n      const formData = new FormData(event.target as HTMLFormElement);\n      const input: AddPantsInput = {\n        color: formData.get('color').toString(),\n        name: formData.get('name').toString(),\n        width: parseInt(formData.get('width').toString(), 10),\n        length: parseInt(formData.get('length').toString(), 10),\n      };\n      event.preventDefault();\n      await addShirt({\n        variables: {\n          input,\n        },\n      });\n      onDone();\n    },\n    [onDone],\n  );\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__fields\">\n          <label className=\"form__fields__label\" htmlFor=\"name\">\n            Name:\n          </label>\n          <input name=\"name\" />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Color:\n          </label>\n          <input name=\"color\" required />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Width:\n          </label>\n          <input name=\"width\" min=\"1\" type=\"number\" />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Length:\n          </label>\n          <input name=\"length\" min=\"1\" type=\"number\" />\n        </div>\n        <div className=\"form__actions\">\n          <button className=\"form__actions__item\" disabled={loading} type=\"submit\">\n            Add\n          </button>\n          <button className=\"form__actions__item\" disabled={loading} type=\"button\" onClick={onDone}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { ProductType } from 'generated';\nimport Link from 'next/link';\nimport { useCallback, useState } from 'react';\nimport { AddPants } from './AddPants';\nimport { AddShirt } from './AddShirt';\n\nexport const AddProduct: React.FunctionComponent = () => {\n  const [productType, setProductType] = useState<ProductType>(null);\n  const handleAddShirt = useCallback(() => {\n    setProductType(ProductType.Shirt);\n  }, []);\n  const handleAddPants = useCallback(() => {\n    setProductType(ProductType.Pants);\n  }, []);\n  const handleDone = useCallback(() => {\n    setProductType(null);\n  }, []);\n  return (\n    <div>\n      <div className=\"page-title\">\n        <h1 className=\"page-title__header\">Add new {productType || 'product'}</h1>\n        <Link href=\"/\" as=\"/\">\n          <a className=\"page-title__action\">All products</a>\n        </Link>\n      </div>\n      {productType === ProductType.Shirt && <AddShirt onDone={handleDone} />}\n      {productType === ProductType.Pants && <AddPants onDone={handleDone} />}\n      {!productType && (\n        <div className=\"add-actions\">\n          <button className=\"add-actions__button\" onClick={handleAddShirt}>\n            Add Shirt\n          </button>\n          <button className=\"add-actions__button\" onClick={handleAddPants}>\n            Add Pants\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { gql, useMutation } from '@apollo/client';\nimport { useCallback } from 'react';\nimport { AddShirtInput, AddShirtMutation, ShirtColor } from 'generated';\n\ntype Props = {\n  onDone: () => void;\n};\n\nexport const ADD_SHIRT_MUTATION = gql`\n  mutation AddShirt($input: AddShirtInput!) {\n    addShirt(data: $input) {\n      id\n      name\n      type\n      color\n      size\n    }\n  }\n`;\n\nexport const AddShirt: React.FunctionComponent<Props> = ({ onDone }: Props) => {\n  const [addShirt, { loading }] = useMutation<AddShirtMutation>(ADD_SHIRT_MUTATION);\n  const handleSubmit = useCallback(\n    async (event: React.FormEvent) => {\n      const formData = new FormData(event.target as HTMLFormElement);\n      const input: AddShirtInput = {\n        color: formData.get('color').toString() as ShirtColor,\n        name: formData.get('name').toString(),\n        size: parseInt(formData.get('size').toString(), 10),\n      };\n      event.preventDefault();\n      await addShirt({\n        variables: {\n          input,\n        },\n      });\n      onDone();\n    },\n    [onDone],\n  );\n  return (\n    <div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__fields\">\n          <label className=\"form__fields__label\" htmlFor=\"name\">\n            Name:\n          </label>\n          <input id=\"name\" name=\"name\" />\n          <label className=\"form__fields__label\" htmlFor=\"color\">\n            Color:\n          </label>\n          <select id=\"color\" name=\"color\" required>\n            {Object.values(ShirtColor).map((color) => (\n              <option key={color} value={color}>\n                {color}\n              </option>\n            ))}\n          </select>\n          <label className=\"form__fields__label\" htmlFor=\"size\">\n            Size:\n          </label>\n          <input id=\"size\" name=\"size\" min=\"1\" type=\"number\" />\n        </div>\n\n        <div className=\"form__actions\">\n          <button className=\"form__actions__item\" disabled={loading} type=\"submit\">\n            Add\n          </button>\n          <button className=\"form__actions__item\" disabled={loading} type=\"button\" onClick={onDone}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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","sourceRoot":""}